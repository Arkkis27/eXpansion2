<?php
/**
 * File FactoryTest.php
 *
 * @author    de Cramer Oliver<oldec@smile.fr>
 * @copyright 2017 Smile
 */

namespace Tests\eXpansion\Framework\Core\Helpers\JobRunner;

use eXpansion\Framework\Core\Helpers\JobRunner\Factory;
use oliverde8\AsynchronousJobs\Job;
use oliverde8\AsynchronousJobs\Job\CallbackCurl;
use oliverde8\AsynchronousJobs\JobRunner;

class FactoryTest extends \PHPUnit_Framework_TestCase
{

    protected $triggered = false;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->triggered = false;
    }


    public function testGetRunner()
    {
        $factory = new Factory();
        $this->assertInstanceOf(JobRunner::class, $factory->getJobRunner());
    }

    public function testGetCurlJob()
    {
        $factory = new Factory();
        $jobRunner = $factory->getJobRunner();
        $job = $factory->createCurlJob('http://jsonplaceholder.typicode.com/posts', array($this, 'aCallback'));

        $this->assertInstanceOf(CallbackCurl::class, $job);

        // Start job and wait for it to end.
        $factory->startJob($job);
        $factory->onExpansionPostLoop();
        $jobRunner->waitForAll();

        $this->assertTrue($this->triggered);
    }

    public function aCallback(Job $curlJob)
    {
        $this->triggered = true;
    }
}
