#Include "AnimLib" as AL

main () {

    declare CMlFrame Window <=> (Page.GetFirstChild("Window") as CMlFrame);
    declare CMlQuad Titlebar <=> (Page.GetFirstChild("Title") as CMlQuad);
    declare CMlLabel CloseButton <=> (Page.GetFirstChild("Close") as CMlLabel);
    declare moveWindow = False;
    declare closeWindow = False;
    declare openWindow = False;
    declare Vec2 Offset = <0.0, 0.0>;
    declare Real zIndex = 0.;
    declare Boolean MoveWindow = False;
    declare Integer lastAction = Now;

    while(True) {
		yield;

        if (openWindow) {
            AnimMgr.Add(Window, "<frame scale=\"1.\" />", 200, CAnimManager::EAnimManagerEasing::SineIn);
       	}

        if (closeWindow) {
         	AnimMgr.Add(Window, "<frame scale=\"0.\" />", 200, CAnimManager::EAnimManagerEasing::SineOut);
        }

        if (openWindow && lastAction + 200 <= Now ) {
            openWindow = False;
            lastAction = 0;
        }

	    if (closeWindow && lastAction + 200 <= Now ) {
            closeWindow = False;
            TriggerPageAction(CloseButton.DataAttributeGet("action"));
	        continue;
	    }

	    if (MoveWindow) {
            Window.RelativePosition_V3.X = MouseX + Offset.X;
	        Window.RelativePosition_V3.Y = MouseY + Offset.Y;
	    }

	    if (PendingEvents.count != 0) {
            foreach (Event in PendingEvents) {
                if ( (Event.Type == CMlEvent::Type::MouseClick && Event.ControlId == "Close")  ||
                   (Event.Type == CMlEvent::Type::KeyPress && Event.KeyCode == 35) ) {
                    closeWindow = True;
                    lastAction = Now;
                }

                if ( (Event.Type == CMlEvent::Type::MouseClick && Event.ControlId == "Open") ) {
                    lastAction = Now;
                    openWindow = True;
                }
            }
	    }

	    if (MouseLeftButton == True) {
            foreach (Event in PendingEvents) {
                if (Event.Type == CMlEvent::Type::MouseClick && Event.ControlId == "Title")  {
                    Offset = <Window.RelativePosition_V3.X - MouseX, Window.RelativePosition_V3.Y - MouseY>;
                    MoveWindow = True;
                }
            }
        } else {
            MoveWindow = False;
        }

    }
}