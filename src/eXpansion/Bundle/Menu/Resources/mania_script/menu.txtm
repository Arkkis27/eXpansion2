
declare Boolean isClosing;
declare Text[] CustomEvents;
declare Boolean isMenuOpen;

Void show()  {
     isMenuOpen = True;
	 Audio.PlaySoundEvent( CAudioManager::ELibSound::ShowDialog  , 0, 0.);
	 declare CMlFrame frame <=> (Page.GetFirstChild("buttons") as CMlFrame);
	 declare CMlFrame background <=> (Page.GetFirstChild("background") as CMlFrame);
	 isClosing = False;
	 declare start = Now;
	 declare counter = 0;

	Page.GetClassChildren("bg", background, True);
	foreach (Elem in Page.GetClassChildren_Result) {
       AnimMgr.Add(Elem, "<elem opacity=\"1\" />", 500, CAnimManager::EAnimManagerEasing::Linear);
    }
	Page.GetClassChildren("button", frame, True);
	foreach (Button in Page.GetClassChildren_Result) {
        Button.RelativeScale = 1.;
        AnimMgr.Add(Button, "<quÂ§ad opacity=\"1.\" />", 500, CAnimManager::EAnimManagerEasing::QuadIn);
    }
    declare CMlQuad mainBg <=> (Page.GetFirstChild("mainBg") as CMlQuad);
    mainBg.Show();

}

Void hide(CMlControl ClickedElem) {
    isMenuOpen = False;
    Audio.PlaySoundEvent( CAudioManager::ELibSound::Valid, 0, 0.);
    declare CMlFrame frame <=> (Page.GetFirstChild("buttons") as CMlFrame);
    declare CMlFrame background <=> (Page.GetFirstChild("background") as CMlFrame);
    isClosing = True;
    declare start = Now;
    declare counter = 0;

    Page.GetClassChildren("button", frame, True);
    declare Integer total = Page.GetClassChildren_Result.count;
    foreach (Elem in Page.GetClassChildren_Result) {
        if  (Elem != ClickedElem) {
             AnimMgr.Add(Elem, "<elem opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::Linear);
        } else {
            if (Elem.HasClass("noAnim")  == False) {
                 AnimMgr.Add(Elem, "<elem scale=\"4\" opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::Linear);
            }
            else {
             AnimMgr.Add(Elem, "<elem opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::Linear);
            }
        }
    //	counter+=1;
    }

    Page.GetClassChildren("bg", background, True);
    foreach (Elem in Page.GetClassChildren_Result) {
        AnimMgr.Add(Elem, "<elem opacity=\"0\" />",  500, CAnimManager::EAnimManagerEasing::Linear);
    }
    declare CMlQuad mainBg <=> (Page.GetFirstChild("mainBg") as CMlQuad);
    mainBg.Hide();
}

Void InitialHide() {
 isMenuOpen = False;
 declare CMlFrame frame <=> (Page.GetFirstChild("buttons") as CMlFrame);
 declare CMlFrame background <=> (Page.GetFirstChild("background") as CMlFrame);
 declare CMlQuad mainBg <=> (Page.GetFirstChild("mainBg") as CMlQuad);
    mainBg.Hide();
	Page.GetClassChildren("button", frame, True);
	foreach (Elem in Page.GetClassChildren_Result) {
			if (Elem is CMlLabel) {
				declare El = (Elem as CMlLabel);
				El.Opacity = 0.;
				//El.Blend = CMlLabel::EBlendMode::Add;
			}
			if (Elem is CMlQuad) {
			declare El = (Elem as CMlQuad);
			// El.Blend = CMlQuad::EBlendMode::Add;
			El.Opacity = 0.;
		}
	}

	Page.GetClassChildren("bg", background, True);
	foreach (Elem in Page.GetClassChildren_Result) {
		if (Elem is CMlQuad) {
			declare El = (Elem as CMlQuad);
			El.Opacity = 0.;
		}
		if (Elem is CMlLabel) {
			declare El = (Elem as CMlLabel);
			El.Blend = CMlLabel::EBlendMode::Add;
			El.Opacity = 0.;
		}
	}
}

Void onButtonOver(CMlControl Element) {
	Audio.PlaySoundEvent( CAudioManager::ELibSound::ScoreIncrease   , 0, 0.);

	if (Element is CMlLabel) {
		declare El = (Element as CMlLabel);
	}

	if (Element.HasClass("noAnim")  == False) {
		AnimMgr.Add(Element, "<elem scale=\"1.3\" />", 400, CAnimManager::EAnimManagerEasing::ElasticOut);
	}
}

Void onButtonOut(CMlControl Element) {
		if (Element.HasClass("noAnim")  == False) {
			AnimMgr.Add(Element, "<elem scale=\"1.0\" />", 400, CAnimManager::EAnimManagerEasing::ElasticOut);
		}
}


main() {
	isClosing = True;
	InitialHide();
	CustomEvents = Text[];
	while (True) {
		yield;

		foreach (Event in CustomEvents) {
		switch (Event) {
					case "!profile":

					break;
			}
		}
		CustomEvents.clear();

        if (Playground.IsInGameMenuDisplayed) {
            CloseInGameMenu( CMlScriptIngame::EInGameMenuResult::Resume);
        }

		foreach (Event in PendingEvents) {
		    // 36 for esc, 31 for numpad /
            if (Event.Type == CMlScriptEvent::Type::KeyPress && Event.KeyCode == 31) {
                if (isMenuOpen) {
                    hide(Null);
                } else {
                    show();
                }
            }
		}

		if (isClosing == False) {
		   foreach (Event in PendingEvents) {

				if (Event.Type == CMlScriptEvent::Type::MouseOver && Event.Control.HasClass("button")) {
						onButtonOver(Event.Control);
				}

				if (Event.Type == CMlScriptEvent::Type::MouseOut && Event.Control.HasClass("button")) {
						onButtonOut(Event.Control);
				}

				if (Event.Type == CMlScriptEvent::Type::MouseClick && Event.Control.HasClass("button") ) {
				    isClosing = True;
				    hide(Event.Control);
                    if (Event.Control.DataAttributeExists("action")) {
                        switch (Event.Control.DataAttributeGet("action")) {
                                case "!profile": {
                                    Playground.ShowProfile(LocalUser.Login);
                                }
                                case "!spec": {
                                    Playground.RequestSpectatorClient(!IsSpectator);
                                }
                                case "!quit": {
                                    Playground.QuitServer(False);
                                }
                                case "!help": {
                                        ShowModeHelp();
                                }
                        }

                    }
                }

			}

		}

	}

}
