parameters:
    eXpansion.local_records.nb_records: 100

services:
    eXpansion.local_records.repository.record:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments: ['LocalRecordsBundle:Record']

    #
    # Services used to handle Records in TA.
    #
    eXpansion.local_records.services.race_record_handler_factory:
        class: eXpansion\Bundle\LocalRecords\Services\RecordHandlerFactory
        arguments:
            - '@eXpansion.local_records.repository.record'
            - ASC
            - '%eXpansion.local_records.nb_records%'

    # Plugins to save race records in all TM gamemodes.
    eXpansion.local_records.plugins.race_records:
        class: eXpansion\Bundle\LocalRecords\Plugins\RaceRecords
        arguments:
            - '@eXpansion.local_records.services.race_record_handler_factory'
            - '@eXpansion.framework.core.user_groups.all_players'
            - '@expansion.storage.map'
            - '@expansion.service.dispatcher'
            - 'expansion.local_records.race'
        tags:
            - {name: 'expansion.plugin', data_provider: 'mp.legacy.player'}
            - {name: 'expansion.plugin', data_provider: 'mp.script.map'}
            - {name: 'expansion.plugin', data_provider: 'mp.script.match'}
            - {name: 'expansion.plugin', data_provider: 'tm.script.race'}

    # Data provider to race records data to other plugins.
    eXpansion.local_records.data_providers.race_records:
        class: eXpansion\Bundle\LocalRecords\DataProviders\RecordsDataProvider
        tags:
          - {name: 'expansion.dataprovider', provider: "expansion.local_records.race", interface: 'eXpansion\Bundle\LocalRecords\DataProviders\Listener\RecordsDataListener'}
          - {name: 'expansion.dataprovider.compatibility', title: 'ALL'}
          - {name: 'expansion.dataprovider.parent', parent: 'expansion.local_records.plugins.race_records'}
          - {name: 'expansion.dataprovider.listener', event_name: 'expansion.local_records.race.loaded', method: 'onRecordsLoaded'}
          - {name: 'expansion.dataprovider.listener', event_name: 'expansion.local_records.race.first_time', method: 'onFirstRecord'}
          - {name: 'expansion.dataprovider.listener', event_name: 'expansion.local_records.race.same_score', method: 'onSameScore'}
          - {name: 'expansion.dataprovider.listener', event_name: 'expansion.local_records.race.same_position', method: 'onSamePosition'}
          - {name: 'expansion.dataprovider.listener', event_name: 'expansion.local_records.race.better_position', method: 'onBetterPosition'}

    # Plugin to have chat notificaiton for race records.
    eXpansion.local_records.plugins.race_records_notifications:
        class: eXpansion\Bundle\LocalRecords\Plugins\ChatNotification
        arguments:
            - '@expansion.helper.chat_notification'
            - '@expansion.storage.player'
            - '@expansion.helper.time'
            - 'expansion_local_records.chat.race'
            - 20
        tags:
            - {name: 'expansion.plugin', data_provider: 'expansion.local_records.race'}


    #
    # In Laps mode we will also need a service to save individual lap records and not just race records.
    #
    # TODO Complete
